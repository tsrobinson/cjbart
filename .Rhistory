group_by(i, round) %>%
mutate(select = ifelse(U == max(U),1,0)) %>%
select(-U)
sim_data <- data.frame(i = rep(1:N, each = rounds*profiles),
round = rep(1:rounds, each = profiles),
profile = 1:profiles) %>%
mutate(A = sample(c("a1","a2"), N*rounds*profiles, replace = TRUE),
B = sample(c("b1","b2"), N*rounds*profiles, replace = TRUE),
C = sample(c("c1","c2"), N*rounds*profiles, replace = TRUE)) %>%
mutate(U = rnorm(N*rounds*profiles,0,0.001) +
I(A == "a2")*0.5*round +
I(B == "b2")*(0.5-(round-1)*0.1)) %>%
group_by(i, round) %>%
mutate(select = ifelse(U == max(U),1,0)) %>%
select(-U)
sim_data <- data.frame(i = rep(1:N, each = rounds*profiles),
round = rep(1:rounds, each = profiles),
profile = 1:profiles) %>%
mutate(A = sample(c("a1","a2"), N*rounds*profiles, replace = TRUE),
B = sample(c("b1","b2"), N*rounds*profiles, replace = TRUE),
C = sample(c("c1","c2"), N*rounds*profiles, replace = TRUE)) %>%
mutate(U = rnorm(N*rounds*profiles,0,0.001) +
I(A == "a2")*0.5*round +
I(B == "b2")*(0.5-(round-1)*0.1)) %>%
group_by(i, round) %>%
mutate(select = ifelse(U == max(U),1,0)) %>%
select(-U)
print(sim_data$select)[1:10]
sim_data <- data.frame(i = rep(1:N, each = rounds*profiles),
round = rep(1:rounds, each = profiles),
profile = 1:profiles) %>%
mutate(A = sample(c("a1","a2"), N*rounds*profiles, replace = TRUE),
B = sample(c("b1","b2"), N*rounds*profiles, replace = TRUE),
C = sample(c("c1","c2"), N*rounds*profiles, replace = TRUE)) %>%
mutate(U = rnorm(N*rounds*profiles,0,0.001) +
I(A == "a2")*0.5*round +
I(B == "b2")*(0.5-(round-1)*0.1)) %>%
group_by(i, round) %>%
mutate(select = ifelse(U == max(U),1,0)) %>%
select(-U)
print(sim_data$select[1:10])
sim_data <- data.frame(i = rep(1:N, each = rounds*profiles),
round = rep(1:rounds, each = profiles),
profile = 1:profiles) %>%
mutate(A = sample(c("a1","a2"), N*rounds*profiles, replace = TRUE),
B = sample(c("b1","b2"), N*rounds*profiles, replace = TRUE),
C = sample(c("c1","c2"), N*rounds*profiles, replace = TRUE)) %>%
mutate(U = rnorm(N*rounds*profiles,0,0.001) +
I(A == "a2")*0.5*round +
I(B == "b2")*(0.5-(round-1)*0.1)) %>%
group_by(i, round) %>%
mutate(select = ifelse(U == max(U),1,0)) %>%
select(-U)
print(sim_data$select[1:10])
sim_data <- data.frame(i = rep(1:N, each = rounds*profiles),
round = rep(1:rounds, each = profiles),
profile = 1:profiles) %>%
mutate(A = sample(c("a1","a2"), N*rounds*profiles, replace = TRUE),
B = sample(c("b1","b2"), N*rounds*profiles, replace = TRUE),
C = sample(c("c1","c2"), N*rounds*profiles, replace = TRUE)) %>%
mutate(U = rnorm(N*rounds*profiles,0,0.001) +
I(A == "a2")*0.5*round +
I(B == "b2")*(0.5-(round-1)*0.1)) %>%
group_by(i, round) %>%
mutate(select = ifelse(U == max(U),1,0)) %>%
select(-U)
print(sim_data$select[1:10])
sim_data <- data.frame(i = rep(1:N, each = rounds*profiles),
round = rep(1:rounds, each = profiles),
profile = 1:profiles) %>%
mutate(A = sample(c("a1","a2"), N*rounds*profiles, replace = TRUE),
B = sample(c("b1","b2"), N*rounds*profiles, replace = TRUE),
C = sample(c("c1","c2"), N*rounds*profiles, replace = TRUE)) %>%
mutate(U = rnorm(N*rounds*profiles,0,0.001) +
I(A == "a2")*0.5*round +
I(B == "b2")*(0.5-(round-1)*0.1)) %>%
group_by(i, round) %>%
mutate(select = ifelse(U == max(U),1,0)) %>%
select(-U)
print(sim_data$select[1:10])
sim_data <- data.frame(i = rep(1:N, each = rounds*profiles),
round = rep(1:rounds, each = profiles),
profile = 1:profiles) %>%
mutate(A = sample(c("a1","a2"), N*rounds*profiles, replace = TRUE),
B = sample(c("b1","b2"), N*rounds*profiles, replace = TRUE),
C = sample(c("c1","c2"), N*rounds*profiles, replace = TRUE)) %>%
mutate(U = rnorm(N*rounds*profiles,0,0.001) +
I(A == "a2")*0.5*round +
I(B == "b2")*(0.5-(round-1)*0.1)) %>%
group_by(i, round) %>%
mutate(select = ifelse(U == max(U),1,0)) %>%
select(-U)
print(sim_data$select[1:10])
sim_data <- data.frame(i = rep(1:N, each = rounds*profiles),
round = rep(1:rounds, each = profiles),
profile = 1:profiles) %>%
mutate(A = sample(c("a1","a2"), N*rounds*profiles, replace = TRUE),
B = sample(c("b1","b2"), N*rounds*profiles, replace = TRUE),
C = sample(c("c1","c2"), N*rounds*profiles, replace = TRUE)) %>%
mutate(U = rnorm(N*rounds*profiles,0,0.001) +
I(A == "a2")*0.5*round +
I(B == "b2")*(0.5-(round-1)*0.1)) %>%
group_by(i, round) %>%
mutate(select = ifelse(U == max(U),1,0)) %>%
select(-U)
print(sim_data$select[1:10])
sim_data <- data.frame(i = rep(1:N, each = rounds*profiles),
round = rep(1:rounds, each = profiles),
profile = 1:profiles) %>%
mutate(A = sample(c("a1","a2"), N*rounds*profiles, replace = TRUE),
B = sample(c("b1","b2"), N*rounds*profiles, replace = TRUE),
C = sample(c("c1","c2"), N*rounds*profiles, replace = TRUE)) %>%
mutate(U = rnorm(N*rounds*profiles,0,0.001) +
I(A == "a2")*0.5*round +
I(B == "b2")*(0.5-(round-1)*0.1)) %>%
group_by(i, round) %>%
mutate(select = ifelse(U == max(U),1,0)) %>%
select(-U)
print(sim_data$select[1:10])
sim_data <- data.frame(i = rep(1:N, each = rounds*profiles),
round = rep(1:rounds, each = profiles),
profile = 1:profiles) %>%
mutate(A = sample(c("a1","a2"), N*rounds*profiles, replace = TRUE),
B = sample(c("b1","b2"), N*rounds*profiles, replace = TRUE),
C = sample(c("c1","c2"), N*rounds*profiles, replace = TRUE)) %>%
mutate(U = rnorm(N*rounds*profiles,0,0.001) +
I(A == "a2")*0.5*round +
I(B == "b2")*(0.5-(round-1)*0.1)) %>%
group_by(i, round) %>%
mutate(select = ifelse(U == max(U),1,0)) %>%
select(-U)
print(sim_data$select[1:10])
sim_data <- data.frame(i = rep(1:N, each = rounds*profiles),
round = rep(1:rounds, each = profiles),
profile = 1:profiles) %>%
mutate(A = sample(c("a1","a2"), N*rounds*profiles, replace = TRUE),
B = sample(c("b1","b2"), N*rounds*profiles, replace = TRUE),
C = sample(c("c1","c2"), N*rounds*profiles, replace = TRUE)) %>%
mutate(U = rnorm(N*rounds*profiles,0,0.001) +
I(A == "a2")*0.5*round +
I(B == "b2")*(0.5-(round-1)*0.1)) %>%
group_by(i, round) %>%
mutate(select = ifelse(U == max(U),1,0)) %>%
select(-U)
print(sim_data$select[1:10])
sim_data <- data.frame(i = rep(1:N, each = rounds*profiles),
round = rep(1:rounds, each = profiles),
profile = 1:profiles) %>%
mutate(A = sample(c("a1","a2"), N*rounds*profiles, replace = TRUE),
B = sample(c("b1","b2"), N*rounds*profiles, replace = TRUE),
C = sample(c("c1","c2"), N*rounds*profiles, replace = TRUE)) %>%
mutate(U = rnorm(N*rounds*profiles,0,0.001) +
I(A == "a2")*0.5*round +
I(B == "b2")*(0.5-(round-1)*0.1)) %>%
group_by(i, round) %>%
mutate(select = ifelse(U == max(U),1,0)) %>%
select(-U)
print(sim_data$A[1:10])
sim_data <- data.frame(i = rep(1:N, each = rounds*profiles),
round = rep(1:rounds, each = profiles),
profile = 1:profiles) %>%
mutate(A = sample(c("a1","a2"), N*rounds*profiles, replace = TRUE),
B = sample(c("b1","b2"), N*rounds*profiles, replace = TRUE),
C = sample(c("c1","c2"), N*rounds*profiles, replace = TRUE)) %>%
mutate(U = rnorm(N*rounds*profiles,0,0.001) +
I(A == "a2")*0.5*round +
I(B == "b2")*(0.5-(round-1)*0.1)) %>%
group_by(i, round) %>%
mutate(select = ifelse(U == max(U),1,0)) %>%
select(-U)
print(sim_data$A[1:10])
sim_data <- data.frame(i = rep(1:N, each = rounds*profiles),
round = rep(1:rounds, each = profiles),
profile = 1:profiles) %>%
mutate(A = sample(c("a1","a2"), N*rounds*profiles, replace = TRUE),
B = sample(c("b1","b2"), N*rounds*profiles, replace = TRUE),
C = sample(c("c1","c2"), N*rounds*profiles, replace = TRUE)) %>%
mutate(U = rnorm(N*rounds*profiles,0,0.001) +
I(A == "a2")*0.5*round +
I(B == "b2")*(0.5-(round-1)*0.1)) %>%
group_by(i, round) %>%
mutate(select = ifelse(U == max(U),1,0)) %>%
select(-U)
print(sim_data$A[1:10])
sim_data <- data.frame(i = rep(1:N, each = rounds*profiles),
round = rep(1:rounds, each = profiles),
profile = 1:profiles) %>%
mutate(A = sample(c("a1","a2"), N*rounds*profiles, replace = TRUE),
B = sample(c("b1","b2"), N*rounds*profiles, replace = TRUE),
C = sample(c("c1","c2"), N*rounds*profiles, replace = TRUE)) %>%
mutate(U = rnorm(N*rounds*profiles,0,0.001) +
I(A == "a2")*0.5*round +
I(B == "b2")*(0.5-(round-1)*0.1)) %>%
group_by(i, round) %>%
mutate(select = ifelse(U == max(U),1,0)) %>%
select(-U)
print(sim_data$A[1:10])
sim_data <- data.frame(i = rep(1:N, each = rounds*profiles),
round = rep(1:rounds, each = profiles),
profile = 1:profiles) %>%
mutate(A = sample(c("a1","a2"), N*rounds*profiles, replace = TRUE),
B = sample(c("b1","b2"), N*rounds*profiles, replace = TRUE),
C = sample(c("c1","c2"), N*rounds*profiles, replace = TRUE)) %>%
mutate(U = rnorm(N*rounds*profiles,0,0.001) +
I(A == "a2")*0.5*round +
I(B == "b2")*(0.5-(round-1)*0.1)) %>%
group_by(i, round) %>%
mutate(select = ifelse(U == max(U),1,0)) %>%
select(-U)
print(sim_data$A[1:10])
sim_data <- data.frame(i = rep(1:N, each = rounds*profiles),
round = rep(1:rounds, each = profiles),
profile = 1:profiles) %>%
mutate(A = sample(c("a1","a2"), N*rounds*profiles, replace = TRUE),
B = sample(c("b1","b2"), N*rounds*profiles, replace = TRUE),
C = sample(c("c1","c2"), N*rounds*profiles, replace = TRUE)) %>%
mutate(U = rnorm(N*rounds*profiles,0,0.001) +
I(A == "a2")*0.5*round +
I(B == "b2")*(0.5-(round-1)*0.1)) %>%
group_by(i, round) %>%
mutate(select = ifelse(U == max(U),1,0)) %>%
select(-U)
print(sim_data$A[1:10])
sim_data <- data.frame(i = rep(1:N, each = rounds*profiles),
round = rep(1:rounds, each = profiles),
profile = 1:profiles) %>%
mutate(A = sample(c("a1","a2"), N*rounds*profiles, replace = TRUE),
B = sample(c("b1","b2"), N*rounds*profiles, replace = TRUE),
C = sample(c("c1","c2"), N*rounds*profiles, replace = TRUE)) %>%
mutate(U = rnorm(N*rounds*profiles,0,0.001) +
I(A == "a2")*0.5*round +
I(B == "b2")*(0.5-(round-1)*0.1)) %>%
group_by(i, round) %>%
mutate(select = ifelse(U == max(U),1,0)) %>%
select(-U)
print(sim_data$A[1:10])
sim_data <- data.frame(i = rep(1:N, each = rounds*profiles),
round = rep(1:rounds, each = profiles),
profile = 1:profiles) %>%
mutate(A = sample(c("a1","a2"), N*rounds*profiles, replace = TRUE),
B = sample(c("b1","b2"), N*rounds*profiles, replace = TRUE),
C = sample(c("c1","c2"), N*rounds*profiles, replace = TRUE)) %>%
mutate(U = rnorm(N*rounds*profiles,0,0.001) +
I(A == "a2")*0.5*round +
I(B == "b2")*(0.5-(round-1)*0.1)) %>%
group_by(i, round) %>%
mutate(select = ifelse(U == max(U),1,0)) %>%
select(-U)
print(sim_data$A[1:10])
sim_data <- data.frame(i = rep(1:N, each = rounds*profiles),
round = rep(1:rounds, each = profiles),
profile = 1:profiles) %>%
mutate(A = sample(c("a1","a2"), N*rounds*profiles, replace = TRUE),
B = sample(c("b1","b2"), N*rounds*profiles, replace = TRUE),
C = sample(c("c1","c2"), N*rounds*profiles, replace = TRUE)) %>%
mutate(U = rnorm(N*rounds*profiles,0,0.001) +
I(A == "a2")*0.5*round +
I(B == "b2")*(0.5-(round-1)*0.1)) %>%
group_by(i, round) %>%
mutate(select = ifelse(U == max(U),1,0)) %>%
select(-U)
print(sim_data$A[1:10])
sim_data <- data.frame(i = rep(1:N, each = rounds*profiles),
round = rep(1:rounds, each = profiles),
profile = 1:profiles) %>%
mutate(A = sample(c("a1","a2"), N*rounds*profiles, replace = TRUE),
B = sample(c("b1","b2"), N*rounds*profiles, replace = TRUE),
C = sample(c("c1","c2"), N*rounds*profiles, replace = TRUE)) %>%
mutate(U = rnorm(N*rounds*profiles,0,0.001) +
(A == "a2")*0.5*round +
(B == "b2")*(0.5-(round-1)*0.1)) %>%
group_by(i, round) %>%
mutate(select = ifelse(U == max(U),1,0)) %>%
select(-U)
sim_data <- data.frame(i = rep(1:N, each = rounds*profiles),
round = rep(1:rounds, each = profiles),
profile = 1:profiles) %>%
mutate(A = sample(c("a1","a2"), N*rounds*profiles, replace = TRUE),
B = sample(c("b1","b2"), N*rounds*profiles, replace = TRUE),
C = sample(c("c1","c2"), N*rounds*profiles, replace = TRUE)) %>%
mutate(U = rnorm(N*rounds*profiles,0,0.001) +
(A == "a2")*0.5*round +
(B == "b2")*(0.5-(round-1)*0.1)) %>%
group_by(i, round) %>%
mutate(select = ifelse(U == max(U),1,0)) %>%
select(-U)
print(sim_data$select[1:10])
sim_data <- data.frame(i = rep(1:N, each = rounds*profiles),
round = rep(1:rounds, each = profiles),
profile = 1:profiles) %>%
mutate(A = sample(c("a1","a2"), N*rounds*profiles, replace = TRUE),
B = sample(c("b1","b2"), N*rounds*profiles, replace = TRUE),
C = sample(c("c1","c2"), N*rounds*profiles, replace = TRUE)) %>%
mutate(U = rnorm(N*rounds*profiles,0,0.001) +
(A == "a2")*0.5*round +
(B == "b2")*(0.5-(round-1)*0.1)) %>%
group_by(i, round) %>%
mutate(select = ifelse(U == max(U),1,0)) %>%
select(-U)
print(sim_data$select[1:10])
sim_data <- data.frame(i = rep(1:N, each = rounds*profiles),
round = rep(1:rounds, each = profiles),
profile = 1:profiles) %>%
mutate(A = sample(c("a1","a2"), N*rounds*profiles, replace = TRUE),
B = sample(c("b1","b2"), N*rounds*profiles, replace = TRUE),
C = sample(c("c1","c2"), N*rounds*profiles, replace = TRUE)) %>%
mutate(U = rnorm(N*rounds*profiles,0,0.001) +
(A == "a2")*0.5*round +
(B == "b2")*(0.5-(round-1)*0.1)) %>%
group_by(i, round) %>%
mutate(select = ifelse(U == max(U),1,0)) %>%
select(-U)
print(sim_data$select[1:10])
sim_data <- data.frame(i = rep(1:N, each = rounds*profiles),
round = rep(1:rounds, each = profiles),
profile = 1:profiles) %>%
mutate(A = sample(c("a1","a2"), N*rounds*profiles, replace = TRUE),
B = sample(c("b1","b2"), N*rounds*profiles, replace = TRUE),
C = sample(c("c1","c2"), N*rounds*profiles, replace = TRUE)) %>%
mutate(U = rnorm(N*rounds*profiles,0,0.001) +
(A == "a2")*0.5*round +
(B == "b2")*(0.5-(round-1)*0.1)) %>%
group_by(i, round) %>%
mutate(select = ifelse(U == max(U),1,0)) %>%
select(-U)
print(sim_data$select[1:10])
sim_data <- data.frame(i = rep(1:N, each = rounds*profiles),
round = rep(1:rounds, each = profiles),
profile = 1:profiles) %>%
mutate(A = sample(c("a1","a2"), N*rounds*profiles, replace = TRUE),
B = sample(c("b1","b2"), N*rounds*profiles, replace = TRUE),
C = sample(c("c1","c2"), N*rounds*profiles, replace = TRUE)) %>%
mutate(U = rnorm(N*rounds*profiles,0,0.001) +
(A == "a2")*0.5*round +
(B == "b2")*(0.5-(round-1)*0.1)) %>%
group_by(i, round) %>%
mutate(select = ifelse(U == max(U),1,0)) %>%
select(-U)
print(sim_data$select[1:10])
sim_data <- data.frame(i = rep(1:N, each = rounds*profiles),
round = rep(1:rounds, each = profiles),
profile = 1:profiles) %>%
mutate(A = sample(c("a1","a2"), N*rounds*profiles, replace = TRUE),
B = sample(c("b1","b2"), N*rounds*profiles, replace = TRUE),
C = sample(c("c1","c2"), N*rounds*profiles, replace = TRUE)) %>%
mutate(U = rnorm(N*rounds*profiles,0,0.001) +
(A == "a2")*0.5*round +
(B == "b2")*(0.5-(round-1)*0.1)) %>%
group_by(i, round) %>%
mutate(select = ifelse(U == max(U),1,0)) %>%
select(-U)
print(sim_data$select[1:10])
?cjbart
?IMCE
sim_pred$omce
View(sim_pred$omce)
for (b in 1:B) {
sim_data <- data.frame(i = rep(1:N, each = rounds*profiles),
round = rep(1:rounds, each = profiles),
profile = 1:profiles) %>%
mutate(A = sample(c("a1","a2"), N*rounds*profiles, replace = TRUE),
B = sample(c("b1","b2"), N*rounds*profiles, replace = TRUE),
C = sample(c("c1","c2"), N*rounds*profiles, replace = TRUE)) %>%
mutate(U = rnorm(N*rounds*profiles,0,0.001) +
(A == "a2")*0.5*round +
(B == "b2")*(0.5-(round-1)*0.1)) %>%
group_by(i, round) %>%
mutate(select = ifelse(U == max(U),1,0)) %>%
select(-U)
sim_mod <- cjbart(sim_data, Y = "select", id = "i", cores = 4)
sim_pred <- IMCE(sim_data, model = sim_mod, attribs = c("A","B","C"), ref_levels = c("a1","b1","c1"),
Y = "select", id = "i", keep_omce = TRUE)
rmces <- sim_pred$omce %>%
group_by(i, round) %>%
summarise(a2_bar = mean(a2),
b2_bar = mean(b2),
c2_bar = mean(c2))
print(c(cor.test(rmces$round, rmces$a2_bar)$estimate,
cor.test(rmces$round, rmces$b2_bar)$estimate,
cor.test(rmces$round, rmces$c2_bar)$estimate))
}
B = 5
for (b in 1:B) {
sim_data <- data.frame(i = rep(1:N, each = rounds*profiles),
round = rep(1:rounds, each = profiles),
profile = 1:profiles) %>%
mutate(A = sample(c("a1","a2"), N*rounds*profiles, replace = TRUE),
B = sample(c("b1","b2"), N*rounds*profiles, replace = TRUE),
C = sample(c("c1","c2"), N*rounds*profiles, replace = TRUE)) %>%
mutate(U = rnorm(N*rounds*profiles,0,0.001) +
(A == "a2")*0.5*round +
(B == "b2")*(0.5-(round-1)*0.1)) %>%
group_by(i, round) %>%
mutate(select = ifelse(U == max(U),1,0)) %>%
select(-U)
sim_mod <- cjbart(sim_data, Y = "select", id = "i", cores = 4)
sim_pred <- IMCE(sim_data, model = sim_mod, attribs = c("A","B","C"), ref_levels = c("a1","b1","c1"),
Y = "select", id = "i", keep_omce = TRUE)
rmces <- sim_pred$omce %>%
group_by(i, round) %>%
summarise(a2_bar = mean(a2),
b2_bar = mean(b2),
c2_bar = mean(c2))
print(c(cor.test(rmces$round, rmces$a2_bar)$estimate,
cor.test(rmces$round, rmces$b2_bar)$estimate,
cor.test(rmces$round, rmces$c2_bar)$estimate))
}
N = 250
rounds = 10
profiles = 2
B <- 5
N = 250
rounds = 10
profiles = 2
for (b in 1:B) {
sim_data <- data.frame(i = rep(1:N, each = rounds*profiles),
round = rep(1:rounds, each = profiles),
profile = 1:profiles) %>%
mutate(A = sample(c("a1","a2"), N*rounds*profiles, replace = TRUE),
B = sample(c("b1","b2"), N*rounds*profiles, replace = TRUE),
C = sample(c("c1","c2"), N*rounds*profiles, replace = TRUE)) %>%
mutate(U = rnorm(N*rounds*profiles,0,0.001) +
(A == "a2")*0.5*round +
(B == "b2")*(0.5-(round-1)*0.1)) %>%
group_by(i, round) %>%
mutate(select = ifelse(U == max(U),1,0)) %>%
select(-U)
sim_mod <- cjbart(sim_data, Y = "select", id = "i", cores = 4)
sim_pred <- IMCE(sim_data, model = sim_mod, attribs = c("A","B","C"), ref_levels = c("a1","b1","c1"),
Y = "select", id = "i", keep_omce = TRUE)
rmces <- sim_pred$omce %>%
group_by(i, round) %>%
summarise(a2_bar = mean(a2),
b2_bar = mean(b2),
c2_bar = mean(c2))
print(c(cor.test(rmces$round, rmces$a2_bar)$estimate,
cor.test(rmces$round, rmces$b2_bar)$estimate,
cor.test(rmces$round, rmces$c2_bar)$estimate))
}
B <- 5
N = 250
rounds = 10
profiles = 2
corr_sim <- data.frame(A = rep(NA, B),
B = rep(NA, B),
C = rep(NA, B))
for (b in 1:B) {
sim_data <- data.frame(i = rep(1:N, each = rounds*profiles),
round = rep(1:rounds, each = profiles),
profile = 1:profiles) %>%
mutate(A = sample(c("a1","a2"), N*rounds*profiles, replace = TRUE),
B = sample(c("b1","b2"), N*rounds*profiles, replace = TRUE),
C = sample(c("c1","c2"), N*rounds*profiles, replace = TRUE)) %>%
mutate(U = rnorm(N*rounds*profiles,0,0.001) +
(A == "a2")*0.5*round +
(B == "b2")*(0.5-(round-1)*0.1)) %>%
group_by(i, round) %>%
mutate(select = ifelse(U == max(U),1,0)) %>%
select(-U)
sim_mod <- cjbart(sim_data, Y = "select", id = "i", cores = 4)
sim_pred <- IMCE(sim_data, model = sim_mod, attribs = c("A","B","C"), ref_levels = c("a1","b1","c1"),
Y = "select", id = "i", keep_omce = TRUE)
rmces <- sim_pred$omce %>%
group_by(i, round) %>%
summarise(a2_bar = mean(a2),
b2_bar = mean(b2),
c2_bar = mean(c2))
print(c(cor.test(rmces$round, rmces$a2_bar)$estimate,
cor.test(rmces$round, rmces$b2_bar)$estimate,
cor.test(rmces$round, rmces$c2_bar)$estimate))
rm(sim_data, sim_mod, sim_pred, rmces)
}
setwd("~/Dropbox/cjbart")
?exists
test <- list(a = 1, b = data.frame(test_col = c(1,2,3)), c = "hello")
test$c
is.null(test$d)
is.null(test$c)
is.null(test$b)
is.null(test$a)
c(1,2,NULL)
test <- c(1,2,NULL)
test
test <- NULL
missing(test)
is.null(test)
if (!missing(round)) {
if (!(round %in% names(data))) {
stop("Supplied round column not present in data.")
}
} else {
round <- NULL
}
?MISSING
?missing
test <- list(a = 1, b = c(1,2,3), c = NULL)
test$c
TRUE & TRUE
TRUE && TRUE
?&&
?&
&
# Hainmueller coef comparison
data("immigration")
library(cregg)
data(immigration)
View(immigration)
immigration$LangPos <- NULL
immigration$PriorPos <- NULL
immigration$profile <- NULL
immigration$contest_no <- NULL
View(immigration)
